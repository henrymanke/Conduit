name: Docker and Deploy

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Log into registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:${{ env.IMAGE_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - name: SSH and Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: |
            REGISTRY=${{ env.REGISTRY }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            IMAGE_TAG=${{ env.IMAGE_TAG }}
          script: |
            echo "Deploying application..."
            echo "Using registry: $REGISTRY"
            echo "Image name: $IMAGE_NAME"
            echo "Image tag: $IMAGE_TAG"

            # Log in to the Docker registry
            echo "${{ secrets.GHCR_PAT }}" | docker login $REGISTRY -u ${{ github.actor }} --password-stdin || exit 1

            # Navigate to the project directory
            PROJECT_DIR="${{ secrets.DEPLOY_PATH }}/$(basename "$IMAGE_NAME")"
            echo "Navigating to project directory: $PROJECT_DIR"
            cd "$PROJECT_DIR" || exit 1

            # Pull the latest images
            docker compose pull || exit 1

            # Restart the services
            docker compose up -d || exit 1
            echo "Deployment completed successfully!"
